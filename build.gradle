buildscript {
    repositories {
        jcenter()
        maven {
                name = "forge"
                url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: "net.minecraftforge.gradle.forge"
apply from: "build-common.gradle"
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

sourceCompatibility = targetCompatibility = '1.8'

group = "${project.package_base}"
archivesBaseName = "${project.name}-${project.mc_version}"
version = (project.prerelease != "") ? "${project.mod_version}-${project.prerelease}" : "${project.mod_version}"


compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}


minecraft {
    setVersion "${project.mcf_version}"
    setMappings "${project.mcp_mappings}"
    setMakeObfSourceJar false
    setRunDir "run"
    replace "@MOD_VERSION@", "${project.version}"
    replaceIn "thelianuniverse.java"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}



processResources {
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand ([
                "version"  :mod_version,
                "mcversion":mc_version
        ])
    }
    from(sourceSets.main.resources.srcDirs) {exclude "mcmod.info"}
}

jar {
    manifest { attributes(["Maven-Artifact": "${project.group}:${archivesBaseName}:${project.version}"]) }
}
